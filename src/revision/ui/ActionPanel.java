/**
 * 
 */
package revision.ui;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.Set;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import constants.Strings;
import distance.RankingState;
import propositional_translation.InputTranslation;
import revision.ui.handler.ErrorHandler;
import revision.ui.handler.FileHandler;
import revision.ui.settings.UISettings;

/**
 * @author sam_t
 * 
 * The ActionPanel is a UI that contains important fields and actions for the Belief Revision tool. The two main actions are the Generate Trust Grid action
 * and the Revise action. 
 * 
 * The Generate Trust Grid action creates the grid that displays distances between possible states. These values represent the trust the belief 
 * agent has in the reporting agent. These values are used in belief revision
 * 
 * The Revise action performs belief revision. Belief revision is accomplished by combining Initial Beliefs (found in the MainPanel) and Trust values. When a new
 * sentence is introduced (MainPanel) belief revision is performed using all the information the revision agent has available. The output of the revision is displayed
 * on the MainPanel in the Results text area
 * 
 */
public class ActionPanel extends JPanel implements ActionListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	static JTextField vocab;
	
	JButton gen_trust, revise, open_file;
	JLabel actions;
	
	JFileChooser test;
	
	//static MainPanel main_panel;
	
	/*
	 * ActionPanel Constructor
	 * Sets up the panel GUI
	 */
	public ActionPanel(MainPanel main, BeliefPanel beliefpan) {

		this.setBorder(UISettings.panelborder);
		//this.setBackground(Color.RED);
		
		Insets leftcol = new Insets(10, 20, 0, 20);
		Insets label = new Insets(0, 20, 0, 20);
		Insets tbox = new Insets(0, 20, 0, 20);
		
        this.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        
        actions = new JLabel(Strings.action_vocab_title);
        gbc.fill = GridBagConstraints.HORIZONTAL;
        //gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = label;
        gbc.weightx = 1;
        gbc.weighty = 1;
        this.add(actions, gbc);
		
        
		vocab = new JTextField(15);
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.insets = tbox;
        gbc.weightx = 1;
        gbc.weighty = 1;
        this.add(vocab, gbc);
		

		gen_trust = new JButton(Strings.action_gen_trust_action);
        gbc.fill = GridBagConstraints.NONE;
		gbc.anchor = GridBagConstraints.SOUTHWEST;
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.insets = leftcol;
        gbc.weightx = 1;
        gbc.weighty = 1;
        this.add(gen_trust, gbc);
        
		revise = new JButton(Strings.action_revise_action);
        gbc.fill = GridBagConstraints.NONE;
		gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.insets = leftcol;
        gbc.weightx = 1;
        gbc.weighty = 1;
        this.add(revise, gbc);
        
        
//        //testing file upload
////        //button
//        open_file = new JButton("Open File");
//        //test.showOpenDialog(null);
//        gbc.fill = GridBagConstraints.HORIZONTAL;
//        gbc.gridx = 0;
//        gbc.gridy = 4;
//        gbc.weightx = 1;
//        gbc.weighty = 1;
//        gbc.insets = leftcol;
//        this.add(open_file, gbc);
//        
//        test = new JFileChooser();
//        //fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
//        test.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
//        open_file.addActionListener(this);
		/*
		 * The TrustGraphPanel class listens for this action
		 * When this action is taken a default grid is generated by the TrustGraphPanel, using the propositional vocabulary text field arguemnts.
		 */
		gen_trust.addActionListener(MainPanel.graph);
		//gen_trust.addActionListener(this);
		
		/*
		 * The MainPanel class listens for this action.
		 * When this action is taken Initial Beliefs and Trust are used to perform belief revision.
		 */
		revise.addActionListener(beliefpan);
		//revise.addActionListener(this);
		
//		this.add(vocab);
//		this.add(gen_trust);
//		this.add(revise);
		
	}

	/*
	 * File upload test
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
//		ArrayList<Character> vars;
//		String s = e.getActionCommand();
//		
//		
//		if (s.equals(Strings.file_open_file))
//		{
//			RankingState rank;
//			int returnVal;
//
//    		//vocabulary must be set
//    		//check
//    		try {
//    			vars = InputTranslation.getVocabAsList(vocab.getText());
//    		} catch (Exception ex) {
//    			ErrorHandler.addError(Strings.file_open_file, Strings.error_bad_vocab_input);
//    			return;
//    		}
//            
//    		returnVal = test.showOpenDialog(ActionPanel.this);
//            
//            if (returnVal == JFileChooser.APPROVE_OPTION) {
//                File file = test.getSelectedFile();
//                //This is where a real application would open the file.
//                FileHandler read;
//                try {
//                    read = new FileHandler(file);
//                    rank = read.readFileToRanking(vars);
//                    //rank.toConsole();
//                    //rank.toConsoleGroupings();
//                    read.closeFile();
//                } catch (Exception ex) {
//        			ErrorHandler.addError(Strings.file_open_file, ex.getMessage());
//        			return;
//                }
//
//            } else {
//            	System.out.println("Open command cancelled by user.");
//            }
//            //log.setCaretPosition(log.getDocument().getLength());
//		}
		
	}
	


}
